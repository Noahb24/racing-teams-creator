{"ast":null,"code":"var times=[{id:0,time:'15:10.60'},{id:1,time:'13:50.26'},{id:2,time:'15:21.63'},{id:3,time:'15:26.97'},{id:4,time:'13:18.59'},{id:5,time:'13:05.25'},{id:6,time:'13:36.18'},{id:7,time:'14:25.68'},{id:8,time:'15:24.15'}];function k_combinations(set,k){var i,j,combs,head,tailcombs;if(k>set.length||k<=0){return[];}if(k===set.length){return[set];}if(k===1){combs=[];for(i=0;i<set.length;i++){combs.push([set[i]]);}return combs;}combs=[];for(i=0;i<set.length-k+1;i++){head=set.slice(i,i+1);tailcombs=k_combinations(set.slice(i+1),k-1);for(j=0;j<tailcombs.length;j++){combs.push(head.concat(tailcombs[j]));}}return combs;}function tooMS(arr){var newArr=[];arr.map(function(time){var minute=Number(time.slice(0,2))*60000;var second=Number(time.slice(3,5))*1000;var milSec=Number(time.slice(6));newArr.push(minute+second+milSec);});return newArr;}function totalRaceTimes(combos,timesObj){var totaledArr=[];combos.map(function(combo){var comboTotal=0;combo.map(function(r){comboTotal+=timesObj[r];return'';});totaledArr.push({combo:combo,total:comboTotal});return comboTotal;});return totaledArr;}function averageRaceTime(timesArr){var total=0;for(var i=0;i<timesArr.length;i++){total+=timesArr[i].total;}return total/timesArr.length;}function closest(raceTimesObjArr,goal,num){var arr=[];raceTimesObjArr.map(function(time){arr.push(time.total);});var closestTime=arr.reduce(function(prev,curr){return Math.abs(curr-goal)<Math.abs(prev-goal)?curr:prev;});return{combo:raceTimesObjArr[arr.indexOf(closestTime)].combo,total:closestTime,num:num};}function nthClosest(raceTimesObjArr,goal,teams){var usedRacers=[];var closestTimes=[];var arr=raceTimesObjArr;var b=0;var _loop=function _loop(_i){var close=closest(arr,goal,b);var newArr=arr.filter(function(time){return time.total!==close.total;});arr=newArr;b++;if(!usedRacers.includes(close.combo[0])&&!usedRacers.includes(close.combo[1])&&!usedRacers.includes(close.combo[2])){close.combo.map(function(racer){return usedRacers.push(racer);});closestTimes.push(close);_i++;}i=_i;};for(var i=0;i<teams;i){_loop(i);}return closestTimes;}export function findClosestNthTimes(racerObj,teamSize){var racers=[];var times=[];racerObj.map(function(racer){racers.push(racer.id);times.push(racer.time);});var combinations=k_combinations(racers,teamSize);var ms=tooMS(times);var raceTimesObj=totalRaceTimes(combinations,ms);var raceTimesAverage=averageRaceTime(raceTimesObj);//console.log(raceTimesObj)\n//console.log(raceTimesAverage)\nreturn nthClosest(raceTimesObj,raceTimesAverage,teamSize);}export function msToTime(time){var minute=Math.floor(Number(time)/60000);var minuteRemainder=Number(time)%60000;var second=Math.floor(minuteRemainder/1000);var ms=minuteRemainder%1000;return\"\".concat(minute,\":\").concat(second,\".\").concat(ms);}","map":{"version":3,"sources":["/Users/noahblochowitz/Documents/Projects/racingTeams/team-creator/src/features/teamMaker/teamMakerlogic.js"],"names":["times","id","time","k_combinations","set","k","i","j","combs","head","tailcombs","length","push","slice","concat","tooMS","arr","newArr","map","minute","Number","second","milSec","totalRaceTimes","combos","timesObj","totaledArr","combo","comboTotal","r","total","averageRaceTime","timesArr","closest","raceTimesObjArr","goal","num","closestTime","reduce","prev","curr","Math","abs","indexOf","nthClosest","teams","usedRacers","closestTimes","b","close","filter","includes","racer","findClosestNthTimes","racerObj","teamSize","racers","combinations","ms","raceTimesObj","raceTimesAverage","msToTime","floor","minuteRemainder"],"mappings":"AAAA,GAAMA,CAAAA,KAAK,CAAG,CACV,CAACC,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAC,UAAb,CADU,CAEV,CAACD,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAC,UAAb,CAFU,CAGV,CAACD,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAC,UAAb,CAHU,CAIV,CAACD,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAC,UAAb,CAJU,CAKV,CAACD,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAC,UAAb,CALU,CAMV,CAACD,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAC,UAAb,CANU,CAOV,CAACD,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAC,UAAb,CAPU,CAQV,CAACD,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAC,UAAb,CARU,CASV,CAACD,EAAE,CAAE,CAAL,CAAQC,IAAI,CAAC,UAAb,CATU,CAAd,CAYA,QAASC,CAAAA,cAAT,CAAwBC,GAAxB,CAA6BC,CAA7B,CAAgC,CAC/B,GAAIC,CAAAA,CAAJ,CAAOC,CAAP,CAAUC,KAAV,CAAiBC,IAAjB,CAAuBC,SAAvB,CACA,GAAIL,CAAC,CAAGD,GAAG,CAACO,MAAR,EAAkBN,CAAC,EAAI,CAA3B,CAA8B,CAC7B,MAAO,EAAP,CACA,CACD,GAAIA,CAAC,GAAKD,GAAG,CAACO,MAAd,CAAsB,CACrB,MAAO,CAACP,GAAD,CAAP,CACA,CACD,GAAIC,CAAC,GAAK,CAAV,CAAa,CACZG,KAAK,CAAG,EAAR,CACA,IAAKF,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGF,GAAG,CAACO,MAApB,CAA4BL,CAAC,EAA7B,CAAiC,CAChCE,KAAK,CAACI,IAAN,CAAW,CAACR,GAAG,CAACE,CAAD,CAAJ,CAAX,EACA,CACD,MAAOE,CAAAA,KAAP,CACA,CACDA,KAAK,CAAG,EAAR,CAEA,IAAKF,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGF,GAAG,CAACO,MAAJ,CAAaN,CAAb,CAAiB,CAAjC,CAAoCC,CAAC,EAArC,CAAyC,CACxCG,IAAI,CAAGL,GAAG,CAACS,KAAJ,CAAUP,CAAV,CAAaA,CAAC,CAAG,CAAjB,CAAP,CACAI,SAAS,CAAGP,cAAc,CAACC,GAAG,CAACS,KAAJ,CAAUP,CAAC,CAAG,CAAd,CAAD,CAAmBD,CAAC,CAAG,CAAvB,CAA1B,CACA,IAAKE,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGG,SAAS,CAACC,MAA1B,CAAkCJ,CAAC,EAAnC,CAAuC,CACtCC,KAAK,CAACI,IAAN,CAAWH,IAAI,CAACK,MAAL,CAAYJ,SAAS,CAACH,CAAD,CAArB,CAAX,EACA,CACD,CACD,MAAOC,CAAAA,KAAP,CACA,CAED,QAASO,CAAAA,KAAT,CAAgBC,GAAhB,CAAoB,CAChB,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACAD,GAAG,CAACE,GAAJ,CAAQ,SAAAhB,IAAI,CAAI,CACZ,GAAMiB,CAAAA,MAAM,CAAGC,MAAM,CAAClB,IAAI,CAACW,KAAL,CAAW,CAAX,CAAa,CAAb,CAAD,CAAN,CAA0B,KAAzC,CACA,GAAMQ,CAAAA,MAAM,CAAGD,MAAM,CAAClB,IAAI,CAACW,KAAL,CAAW,CAAX,CAAa,CAAb,CAAD,CAAN,CAA0B,IAAzC,CACA,GAAMS,CAAAA,MAAM,CAAGF,MAAM,CAAClB,IAAI,CAACW,KAAL,CAAW,CAAX,CAAD,CAArB,CACAI,MAAM,CAACL,IAAP,CAAYO,MAAM,CAAGE,MAAT,CAAkBC,MAA9B,EACH,CALD,EAMF,MAAOL,CAAAA,MAAP,CACD,CAED,QAASM,CAAAA,cAAT,CAAyBC,MAAzB,CAAiCC,QAAjC,CAA2C,CACvC,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CACAF,MAAM,CAACN,GAAP,CAAW,SAAAS,KAAK,CAAI,CAChB,GAAIC,CAAAA,UAAU,CAAG,CAAjB,CACAD,KAAK,CAACT,GAAN,CAAU,SAAAW,CAAC,CAAI,CACXD,UAAU,EAAIH,QAAQ,CAACI,CAAD,CAAtB,CACA,MAAO,EAAP,CACH,CAHD,EAIAH,UAAU,CAACd,IAAX,CAAgB,CAACe,KAAK,CAALA,KAAD,CAAQG,KAAK,CAACF,UAAd,CAAhB,EACA,MAAOA,CAAAA,UAAP,CACH,CARD,EASA,MAAOF,CAAAA,UAAP,CACH,CAED,QAASK,CAAAA,eAAT,CAA0BC,QAA1B,CAAoC,CAChC,GAAIF,CAAAA,KAAK,CAAG,CAAZ,CACA,IAAI,GAAIxB,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAG0B,QAAQ,CAACrB,MAA5B,CAAoCL,CAAC,EAArC,CAAwC,CACpCwB,KAAK,EAAIE,QAAQ,CAAC1B,CAAD,CAAR,CAAYwB,KAArB,CACH,CACD,MAAOA,CAAAA,KAAK,CAAGE,QAAQ,CAACrB,MAAxB,CACH,CAGD,QAASsB,CAAAA,OAAT,CAAkBC,eAAlB,CAAmCC,IAAnC,CAAyCC,GAAzC,CAA6C,CACzC,GAAIpB,CAAAA,GAAG,CAAG,EAAV,CACAkB,eAAe,CAAChB,GAAhB,CAAoB,SAAAhB,IAAI,CAAI,CACxBc,GAAG,CAACJ,IAAJ,CAASV,IAAI,CAAC4B,KAAd,EACH,CAFD,EAGA,GAAMO,CAAAA,WAAW,CAAIrB,GAAG,CAACsB,MAAJ,CAAW,SAACC,IAAD,CAAOC,IAAP,CAAgB,CAC5C,MAAQC,CAAAA,IAAI,CAACC,GAAL,CAASF,IAAI,CAAGL,IAAhB,EAAwBM,IAAI,CAACC,GAAL,CAASH,IAAI,CAAGJ,IAAhB,CAAxB,CAAgDK,IAAhD,CAAuDD,IAA/D,CACH,CAFoB,CAArB,CAGA,MAAO,CAACZ,KAAK,CAAEO,eAAe,CAAClB,GAAG,CAAC2B,OAAJ,CAAYN,WAAZ,CAAD,CAAf,CAA0CV,KAAlD,CAAyDG,KAAK,CAACO,WAA/D,CAA4ED,GAAG,CAAHA,GAA5E,CAAP,CACH,CAED,QAASQ,CAAAA,UAAT,CAAqBV,eAArB,CAAsCC,IAAtC,CAA4CU,KAA5C,CAAkD,CAC9C,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CACA,GAAMC,CAAAA,YAAY,CAAG,EAArB,CACA,GAAI/B,CAAAA,GAAG,CAAGkB,eAAV,CACA,GAAIc,CAAAA,CAAC,CAAG,CAAR,CAJ8C,6BAS1C,GAAMC,CAAAA,KAAK,CAAGhB,OAAO,CAACjB,GAAD,CAAMmB,IAAN,CAAYa,CAAZ,CAArB,CACA,GAAM/B,CAAAA,MAAM,CAAGD,GAAG,CAACkC,MAAJ,CAAW,SAAAhD,IAAI,QAAIA,CAAAA,IAAI,CAAC4B,KAAL,GAAemB,KAAK,CAACnB,KAAzB,EAAf,CAAf,CACAd,GAAG,CAAGC,MAAN,CACA+B,CAAC,GAED,GAAG,CAACF,UAAU,CAACK,QAAX,CAAoBF,KAAK,CAACtB,KAAN,CAAY,CAAZ,CAApB,CAAD,EAAwC,CAACmB,UAAU,CAACK,QAAX,CAAoBF,KAAK,CAACtB,KAAN,CAAY,CAAZ,CAApB,CAAzC,EAAgF,CAACmB,UAAU,CAACK,QAAX,CAAoBF,KAAK,CAACtB,KAAN,CAAY,CAAZ,CAApB,CAApF,CAAyH,CACrHsB,KAAK,CAACtB,KAAN,CAAYT,GAAZ,CAAgB,SAAAkC,KAAK,QAAIN,CAAAA,UAAU,CAAClC,IAAX,CAAgBwC,KAAhB,CAAJ,EAArB,EACAL,YAAY,CAACnC,IAAb,CAAkBqC,KAAlB,EACA3C,EAAC,GACJ,CAlByC,OAQ9C,IAAI,GAAIA,CAAAA,CAAC,CAAG,CAAZ,CAAeA,CAAC,CAAGuC,KAAnB,CAA0BvC,CAA1B,CAA4B,OAApBA,CAAoB,EAW3B,CACD,MAAOyC,CAAAA,YAAP,CACH,CAED,MAAO,SAASM,CAAAA,mBAAT,CAA8BC,QAA9B,CAAwCC,QAAxC,CAAkD,CAGrD,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAIxD,CAAAA,KAAK,CAAG,EAAZ,CAEAsD,QAAQ,CAACpC,GAAT,CAAa,SAAAkC,KAAK,CAAI,CAClBI,MAAM,CAAC5C,IAAP,CAAYwC,KAAK,CAACnD,EAAlB,EACAD,KAAK,CAACY,IAAN,CAAWwC,KAAK,CAAClD,IAAjB,EACH,CAHD,EAKA,GAAMuD,CAAAA,YAAY,CAAGtD,cAAc,CAACqD,MAAD,CAASD,QAAT,CAAnC,CACA,GAAMG,CAAAA,EAAE,CAAG3C,KAAK,CAACf,KAAD,CAAhB,CAEA,GAAM2D,CAAAA,YAAY,CAAGpC,cAAc,CAACkC,YAAD,CAAeC,EAAf,CAAnC,CACA,GAAME,CAAAA,gBAAgB,CAAG7B,eAAe,CAAC4B,YAAD,CAAxC,CAEA;AACA;AAEA,MAAOf,CAAAA,UAAU,CAACe,YAAD,CAAeC,gBAAf,CAAiCL,QAAjC,CAAjB,CACH,CAED,MAAO,SAASM,CAAAA,QAAT,CAAmB3D,IAAnB,CAAyB,CAC5B,GAAMiB,CAAAA,MAAM,CAAGsB,IAAI,CAACqB,KAAL,CAAW1C,MAAM,CAAClB,IAAD,CAAN,CAAe,KAA1B,CAAf,CACA,GAAM6D,CAAAA,eAAe,CAAE3C,MAAM,CAAClB,IAAD,CAAN,CAAe,KAAtC,CAEA,GAAMmB,CAAAA,MAAM,CAAGoB,IAAI,CAACqB,KAAL,CAAWC,eAAe,CAAG,IAA7B,CAAf,CACA,GAAML,CAAAA,EAAE,CAAGK,eAAe,CAAG,IAA7B,CAEA,gBAAU5C,MAAV,aAAoBE,MAApB,aAA8BqC,EAA9B,EACH","sourcesContent":["const times = [\n    {id: 0, time:'15:10.60'},\n    {id: 1, time:'13:50.26'},\n    {id: 2, time:'15:21.63'},\n    {id: 3, time:'15:26.97'},\n    {id: 4, time:'13:18.59'},\n    {id: 5, time:'13:05.25'},\n    {id: 6, time:'13:36.18'},\n    {id: 7, time:'14:25.68'},\n    {id: 8, time:'15:24.15'}\n]\n\nfunction k_combinations(set, k) {\n\tvar i, j, combs, head, tailcombs;\n\tif (k > set.length || k <= 0) {\n\t\treturn [];\n\t}\n\tif (k === set.length) {\n\t\treturn [set];\n\t}\n\tif (k === 1) {\n\t\tcombs = [];\n\t\tfor (i = 0; i < set.length; i++) {\n\t\t\tcombs.push([set[i]]);\n\t\t}\n\t\treturn combs;\n\t}\n\tcombs = [];\n\n\tfor (i = 0; i < set.length - k + 1; i++) {\n\t\thead = set.slice(i, i + 1);\n\t\ttailcombs = k_combinations(set.slice(i + 1), k - 1);\n\t\tfor (j = 0; j < tailcombs.length; j++) {\n\t\t\tcombs.push(head.concat(tailcombs[j]));\n\t\t}\n\t}\n\treturn combs;\n}\n\nfunction tooMS (arr){\n    let newArr = []\n    arr.map(time => {\n        const minute = Number(time.slice(0,2)) * 60000\n        const second = Number(time.slice(3,5)) * 1000\n        const milSec = Number(time.slice(6))\n        newArr.push(minute + second + milSec)\n    }) \n  return newArr  \n}\n\nfunction totalRaceTimes (combos, timesObj) {\n    const totaledArr = []\n    combos.map(combo => {\n        let comboTotal = 0\n        combo.map(r => {\n            comboTotal += timesObj[r]\n            return ''\n        })\n        totaledArr.push({combo, total:comboTotal})\n        return comboTotal\n    })\n    return totaledArr\n}\n\nfunction averageRaceTime (timesArr) {\n    var total = 0\n    for(let i = 0; i < timesArr.length; i++){\n        total += timesArr[i].total\n    }\n    return total / timesArr.length\n}\n  \n\nfunction closest (raceTimesObjArr, goal, num){\n    let arr = []\n    raceTimesObjArr.map(time => {\n        arr.push(time.total)\n    })\n    const closestTime =  arr.reduce((prev, curr) => {\n        return (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev)\n    })\n    return {combo: raceTimesObjArr[arr.indexOf(closestTime)].combo ,total:closestTime, num}\n}\n\nfunction nthClosest (raceTimesObjArr, goal, teams){\n    const usedRacers = []\n    const closestTimes = []\n    let arr = raceTimesObjArr\n    let b = 0\n\n\n\n    for(let i = 0; i < teams; i){\n        const close = closest(arr, goal, b)\n        const newArr = arr.filter(time => time.total !== close.total)\n        arr = newArr\n        b++\n\n        if(!usedRacers.includes(close.combo[0]) && !usedRacers.includes(close.combo[1]) && !usedRacers.includes(close.combo[2])) {\n            close.combo.map(racer => usedRacers.push(racer))\n            closestTimes.push(close)\n            i++\n        }\n    }\n    return closestTimes\n}\n\nexport function findClosestNthTimes (racerObj, teamSize) {\n\n\n    let racers = []\n    let times = []\n\n    racerObj.map(racer => {\n        racers.push(racer.id)\n        times.push(racer.time)\n    })\n\n    const combinations = k_combinations(racers, teamSize)\n    const ms = tooMS(times)\n\n    const raceTimesObj = totalRaceTimes(combinations ,ms)\n    const raceTimesAverage = averageRaceTime(raceTimesObj)\n\n    //console.log(raceTimesObj)\n    //console.log(raceTimesAverage)\n\n    return nthClosest(raceTimesObj, raceTimesAverage, teamSize)\n}\n\nexport function msToTime (time) {\n    const minute = Math.floor(Number(time) / 60000)\n    const minuteRemainder =Number(time) % 60000\n\n    const second = Math.floor(minuteRemainder / 1000)\n    const ms = minuteRemainder % 1000\n\n    return `${minute}:${second}.${ms}`\n}"]},"metadata":{},"sourceType":"module"}