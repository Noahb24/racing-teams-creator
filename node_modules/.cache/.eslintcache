[{"/Users/noahblochowitz/Documents/Projects/racingTeams/src/index.js":"1","/Users/noahblochowitz/Documents/Projects/racingTeams/src/App.js":"2","/Users/noahblochowitz/Documents/Projects/racingTeams/src/serviceWorker.js":"3","/Users/noahblochowitz/Documents/Projects/racingTeams/src/app/store.js":"4","/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/teamMaker.js":"5","/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/teamMakerSlice.js":"6","/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/racer.js":"7","/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/teamMakerlogic.js":"8","/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/raceTeams.js":"9"},{"size":639,"mtime":1632261217188,"results":"10","hashOfConfig":"11"},{"size":200,"mtime":1632261217184,"results":"12","hashOfConfig":"11"},{"size":5014,"mtime":1632261217189,"results":"13","hashOfConfig":"11"},{"size":213,"mtime":1632261217185,"results":"14","hashOfConfig":"11"},{"size":2373,"mtime":1632282233149,"results":"15","hashOfConfig":"11"},{"size":1479,"mtime":1632281996917,"results":"16","hashOfConfig":"11"},{"size":1284,"mtime":1632271923148,"results":"17","hashOfConfig":"11"},{"size":3681,"mtime":1632273546138,"results":"18","hashOfConfig":"11"},{"size":1138,"mtime":1632274261048,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hscz9z",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/noahblochowitz/Documents/Projects/racingTeams/src/index.js",[],"/Users/noahblochowitz/Documents/Projects/racingTeams/src/App.js",[],"/Users/noahblochowitz/Documents/Projects/racingTeams/src/serviceWorker.js",[],"/Users/noahblochowitz/Documents/Projects/racingTeams/src/app/store.js",[],"/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/teamMaker.js",["40"],"import React from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Racer from './racer'\nimport Teams from './raceTeams'\nimport { findClosestNthTimes } from './teamMakerlogic'\nimport { addRacer, getTeams, selectRacers, selectTeams, selectTeamSize, teamSizeChange } from './teamMakerSlice'\nimport './teamMaker.css'\n\n\nfunction TeamMaker() {\n    const dispatch = useDispatch()\n    const teamSize = useSelector(selectTeamSize)\n    const racers = useSelector(selectRacers)\n    const teams = useSelector(selectTeams)\n\n    function handleGetTeams () {\n        let teams\n        let size\n        if(teamSize === 0){\n            try{\n                size = document.getElementById('option1').value\n            }catch(err){\n                console.log(\"Team Size Error\")\n            }\n        } else size = teamSize\n\n        try {\n            teams = findClosestNthTimes(racers, size)\n        } catch(err) {\n            window.alert('Error in Creating Teams')\n            console.log(err)\n            return\n        }\n        dispatch(getTeams(teams))\n    }\n    \n    \n    return (\n        <div className = 'teamMaker'>\n            <div className = 'header'>\n                <label>\n                    Team Size:\n                    <select id=\"teamSize\" onChange ={e => dispatch(teamSizeChange(e.target.value))} type='number' value = {teamSize}>\n                        {\n                            racers.map((racer, i) => {\n                                const num = i +1\n                                if(num !== 1 && num !== racers.length && racers.length % num === 0){\n                                    return (\n                                        <option key={i} id={`option${i}`} value = {num}>{num}</option>\n                                    )\n                                }\n                            })\n                        }\n                    </select>\n                </label>\n                <button onClick={() => dispatch(addRacer())}>Add Racer</button>\n                <button onClick={() => handleGetTeams()}>Get Teams</button>\n            </div>\n\n            <div>\n                <h2>Racers: {racers.length}</h2>\n                    <Racer />\n            </div>\n\n            <div>\n                <h2>Teams: {teams.length}</h2>\n                    <Teams />\n            </div>\n        </div>\n    )\n}\n\nexport default TeamMaker","/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/teamMakerSlice.js",[],"/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/racer.js",["41"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { deleteRacer, racerChange, selectRacers } from './teamMakerSlice'\n\nfunction Racer() {\n    const racers = useSelector(selectRacers)\n    const dispatch = useDispatch()\n\n    function handleRacerChange (num, type, value) {\n        const payload = {\n            type,\n            num,\n            value: value.target.value\n        }\n        dispatch(racerChange(payload))\n    }\n\n    return (\n        <div className = \"racers\">\n            {   \n            racers.map( (element, i) => {\n                return(\n                    <div key={i} className=\"racer\">\n                        <p>Name: \n                           <input id=\"name\" type=\"text\" onChange ={e => handleRacerChange(i, 'name', e)} value={racers[i].name}></input>\n                        </p>\n\n                        <p>Time (mm:ss.ms): \n                           <input id=\"time\" type=\"text\" onChange ={e => handleRacerChange(i, 'time', e)} value={racers[i].time}></input>\n                           {/*button onClick = {() => dispatch(deleteRacer(i))}>Delete</button> */}\n                        </p>\n                    </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default Racer","/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/teamMakerlogic.js",[],"/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/raceTeams.js",[],{"ruleId":"42","severity":1,"message":"43","line":45,"column":51,"nodeType":"44","messageId":"45","endLine":45,"endColumn":53},{"ruleId":"46","severity":1,"message":"47","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":21},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'deleteRacer' is defined but never used.","Identifier","unusedVar"]