[{"/Users/noahblochowitz/Documents/Projects/racingTeams/src/index.js":"1","/Users/noahblochowitz/Documents/Projects/racingTeams/src/App.js":"2","/Users/noahblochowitz/Documents/Projects/racingTeams/src/serviceWorker.js":"3","/Users/noahblochowitz/Documents/Projects/racingTeams/src/app/store.js":"4","/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/teamMaker.js":"5","/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/teamMakerSlice.js":"6","/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/racer.js":"7","/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/teamMakerlogic.js":"8","/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/raceTeams.js":"9"},{"size":639,"mtime":1632259302373,"results":"10","hashOfConfig":"11"},{"size":200,"mtime":1631908707355,"results":"12","hashOfConfig":"11"},{"size":5014,"mtime":1631907884050,"results":"13","hashOfConfig":"11"},{"size":213,"mtime":1631916594038,"results":"14","hashOfConfig":"11"},{"size":1350,"mtime":1632240121122,"results":"15","hashOfConfig":"11"},{"size":1559,"mtime":1632234408990,"results":"16","hashOfConfig":"11"},{"size":1233,"mtime":1631921112682,"results":"17","hashOfConfig":"11"},{"size":3421,"mtime":1632251957150,"results":"18","hashOfConfig":"11"},{"size":1072,"mtime":1632251947328,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1hscz9z",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/noahblochowitz/Documents/Projects/racingTeams/src/index.js",[],"/Users/noahblochowitz/Documents/Projects/racingTeams/src/App.js",[],"/Users/noahblochowitz/Documents/Projects/racingTeams/src/serviceWorker.js",[],"/Users/noahblochowitz/Documents/Projects/racingTeams/src/app/store.js",[],"/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/teamMaker.js",[],"/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/teamMakerSlice.js",["40"],"import { createSlice } from \"@reduxjs/toolkit\";\nimport { findClosestNthTimes } from \"./teamMakerlogic\";\n\nconst initialState = {\n    teamSize: 3,\n    racers: [\n        {\n        name: '',\n        time: '00:00.00',\n        id: 0}\n    ],\n    teams: []\n}\n\nexport const teamMakerSlice = createSlice ({\n    name: 'teamMaker',\n    initialState,\n    reducers: {\n        teamSizeChange: (state, action) => {\n            state.teamSize = action.payload\n        },\n        addRacer: (state, action) => {\n            state.racers.push({\n                name: \"\",\n                time: '00:00.00',\n                id: state.racers.length\n            })\n        },\n        deleteRacer: (state, action) => {\n            console.log(action.payload)\n            state.racers = [\n                ...state.racers.slice(0, action.payload),\n                ...state.racers.slice(action.payload + 1)]\n        },\n        racerChange: (state, action) => {\n            const type = action.payload.type\n            const value = action.payload.value\n            const num = action.payload.num\n            state.racers[num][type] = value\n        },\n        getTeams: (state, action) => {\n            \n            state.teams = action.payload\n        }\n    }\n})\n\nexport const selectRacers = state => state.teamMaker.racers\nexport const selectTeamSize = state => state.teamMaker.teamSize\nexport const selectTeams = state => state.teamMaker.teams\n\nexport const { addRacer, racerChange, deleteRacer, getTeams, teamSizeChange } = teamMakerSlice.actions\n\nexport default teamMakerSlice.reducer","/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/racer.js",[],"/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/teamMakerlogic.js",["41","42","43","44"],"const times = [\n    {id: 0, time:'15:10.60'},\n    {id: 1, time:'13:50.26'},\n    {id: 2, time:'15:21.63'},\n    {id: 3, time:'15:26.97'},\n    {id: 4, time:'13:18.59'},\n    {id: 5, time:'13:05.25'},\n    {id: 6, time:'13:36.18'},\n    {id: 7, time:'14:25.68'},\n    {id: 8, time:'15:24.15'}\n]\n\nfunction k_combinations(set, k) {\n\tvar i, j, combs, head, tailcombs;\n\tif (k > set.length || k <= 0) {\n\t\treturn [];\n\t}\n\tif (k === set.length) {\n\t\treturn [set];\n\t}\n\tif (k === 1) {\n\t\tcombs = [];\n\t\tfor (i = 0; i < set.length; i++) {\n\t\t\tcombs.push([set[i]]);\n\t\t}\n\t\treturn combs;\n\t}\n\tcombs = [];\n\n\tfor (i = 0; i < set.length - k + 1; i++) {\n\t\thead = set.slice(i, i + 1);\n\t\ttailcombs = k_combinations(set.slice(i + 1), k - 1);\n\t\tfor (j = 0; j < tailcombs.length; j++) {\n\t\t\tcombs.push(head.concat(tailcombs[j]));\n\t\t}\n\t}\n\treturn combs;\n}\n\nfunction tooMS (arr){\n    let newArr = []\n    arr.map(time => {\n        const minute = Number(time.slice(0,2)) * 60000\n        const second = Number(time.slice(3,5)) * 1000\n        const milSec = Number(time.slice(6))\n        newArr.push(minute + second + milSec)\n    }) \n  return newArr  \n}\n\nfunction totalRaceTimes (combos, timesObj) {\n    const totaledArr = []\n    combos.map(combo => {\n        let comboTotal = 0\n        combo.map(r => {\n            comboTotal += timesObj[r]\n            return ''\n        })\n        totaledArr.push({combo, total:comboTotal})\n        return comboTotal\n    })\n    return totaledArr\n}\n\nfunction averageRaceTime (timesArr) {\n    var total = 0\n    for(let i = 0; i < timesArr.length; i++){\n        total += timesArr[i].total\n    }\n    return total / timesArr.length\n}\n  \n\nfunction closest (raceTimesObjArr, goal, num){\n    let arr = []\n    raceTimesObjArr.map(time => {\n        arr.push(time.total)\n    })\n    const closestTime =  arr.reduce((prev, curr) => {\n        return (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev)\n    })\n    return {combo: raceTimesObjArr[arr.indexOf(closestTime)].combo ,total:closestTime, num}\n}\n\nfunction nthClosest (raceTimesObjArr, goal, teams){\n    const usedRacers = []\n    const closestTimes = []\n    let arr = raceTimesObjArr\n    let b = 0\n\n\n\n    for(let i = 0; i < teams; i){\n        const close = closest(arr, goal, b)\n        const newArr = arr.filter(time => time.total !== close.total)\n        arr = newArr\n        b++\n\n        if(!usedRacers.includes(close.combo[0]) && !usedRacers.includes(close.combo[1]) && !usedRacers.includes(close.combo[2])) {\n            close.combo.map(racer => usedRacers.push(racer))\n            closestTimes.push(close)\n            i++\n        }\n    }\n    return closestTimes\n}\n\nexport function findClosestNthTimes (racerObj, teamSize) {\n\n\n    let racers = []\n    let times = []\n\n    racerObj.map(racer => {\n        racers.push(racer.id)\n        times.push(racer.time)\n    })\n\n    const combinations = k_combinations(racers, teamSize)\n    const ms = tooMS(times)\n\n    const raceTimesObj = totalRaceTimes(combinations ,ms)\n    const raceTimesAverage = averageRaceTime(raceTimesObj)\n\n    //console.log(raceTimesObj)\n    //console.log(raceTimesAverage)\n\n    return nthClosest(raceTimesObj, raceTimesAverage, teamSize)\n}\n\nexport function msToTime (time) {\n    const minute = Math.floor(Number(time) / 60000)\n    const minuteRemainder =Number(time) % 60000\n\n    const second = Math.floor(minuteRemainder / 1000)\n    const ms = minuteRemainder % 1000\n\n    return `${minute}:${second}.${ms}`\n}","/Users/noahblochowitz/Documents/Projects/racingTeams/src/features/teamMaker/raceTeams.js",[],{"ruleId":"45","severity":1,"message":"46","line":2,"column":10,"nodeType":"47","messageId":"48","endLine":2,"endColumn":29},{"ruleId":"45","severity":1,"message":"49","line":1,"column":7,"nodeType":"47","messageId":"48","endLine":1,"endColumn":12},{"ruleId":"50","severity":1,"message":"51","line":42,"column":18,"nodeType":"52","messageId":"53","endLine":42,"endColumn":20},{"ruleId":"50","severity":1,"message":"51","line":76,"column":30,"nodeType":"52","messageId":"53","endLine":76,"endColumn":32},{"ruleId":"50","severity":1,"message":"51","line":114,"column":24,"nodeType":"52","messageId":"53","endLine":114,"endColumn":26},"no-unused-vars","'findClosestNthTimes' is defined but never used.","Identifier","unusedVar","'times' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside"]