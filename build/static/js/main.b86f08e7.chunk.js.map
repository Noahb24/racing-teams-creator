{"version":3,"sources":["features/teamMaker/teamMakerSlice.js","features/teamMaker/racer.js","features/teamMaker/teamMakerlogic.js","features/teamMaker/raceTeams.js","features/teamMaker/teamMaker.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["teamMakerSlice","createSlice","name","initialState","teamSize","racers","time","id","teams","reducers","teamSizeChange","state","action","payload","addRacer","push","length","deleteRacer","slice","racerChange","type","value","num","getTeams","selectRacers","teamMaker","selectTeamSize","selectTeams","actions","Racer","useSelector","dispatch","useDispatch","handleRacerChange","target","className","map","element","i","onChange","e","k_combinations","set","k","j","combs","head","tailcombs","concat","nthClosest","raceTimesObjArr","goal","usedRacers","closestTimes","arr","b","close","total","closestTime","reduce","prev","curr","Math","abs","combo","indexOf","closest","newArr","filter","includes","racer","findClosestNthTimes","racerObj","times","raceTimesObj","combos","timesObj","totaledArr","comboTotal","r","totalRaceTimes","minute","Number","second","milSec","tooMS","timesArr","averageRaceTime","msToTime","floor","minuteRemainder","ms","Teams","team","TeamMaker","onClick","err","window","alert","console","log","handleGetTeams","App","store","configureStore","reducer","teamMakerReducer","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gNAaaA,EAAiBC,YAAa,CACvCC,KAAM,YACNC,aAbiB,CACjBC,SAAU,EACVC,OAAQ,CACJ,CACAH,KAAM,GACNI,KAAM,WACNC,GAAI,IAERC,MAAO,IAMPC,SAAU,CACNC,eAAgB,SAACC,EAAOC,GACpBD,EAAMP,SAAWQ,EAAOC,SAE5BC,SAAU,SAACH,EAAOC,GACdD,EAAMN,OAAOU,KAAK,CACdb,KAAM,GACNI,KAAM,WACNC,GAAII,EAAMN,OAAOW,UAGzBC,YAAa,SAACN,EAAOC,GACjBD,EAAMH,MAAQ,GACdG,EAAMN,OAAN,sBACOM,EAAMN,OAAOa,MAAM,EAAGN,EAAOC,UADpC,YAEOF,EAAMN,OAAOa,MAAMN,EAAOC,QAAU,MAE/CM,YAAa,SAACR,EAAOC,GACjB,IAAMQ,EAAOR,EAAOC,QAAQO,KACtBC,EAAQT,EAAOC,QAAQQ,MACvBC,EAAMV,EAAOC,QAAQS,IAC3BX,EAAMN,OAAOiB,GAAKF,GAAQC,GAE9BE,SAAU,SAACZ,EAAOC,GACdD,EAAMH,MAAQI,EAAOC,YAKpBW,EAAe,SAAAb,GAAK,OAAIA,EAAMc,UAAUpB,QACxCqB,EAAiB,SAAAf,GAAK,OAAIA,EAAMc,UAAUrB,UAC1CuB,EAAc,SAAAhB,GAAK,OAAIA,EAAMc,UAAUjB,OAE7C,EAAyER,EAAe4B,QAAhFd,EAAR,EAAQA,SAAUK,EAAlB,EAAkBA,YAA0BI,GAA5C,EAA+BN,YAA/B,EAA4CM,UAAUb,EAAtD,EAAsDA,eAE9CV,IAAf,Q,OCZe6B,MAnCf,WACI,IAAMxB,EAASyB,YAAYN,GACrBO,EAAWC,cAEjB,SAASC,EAAmBX,EAAKF,EAAMC,GACnC,IAAMR,EAAU,CACZO,OACAE,MACAD,MAAOA,EAAMa,OAAOb,OAExBU,EAASZ,EAAYN,IAGzB,OACI,qBAAKsB,UAAY,SAAjB,SAEI9B,EAAO+B,KAAK,SAACC,EAASC,GAClB,OACI,sBAAaH,UAAU,QAAvB,UACI,sCACG,uBAAO5B,GAAG,OAAOa,KAAK,OAAOmB,SAAW,SAAAC,GAAC,OAAIP,EAAkBK,EAAG,OAAQE,IAAInB,MAAOhB,EAAOiC,GAAGpC,UAGlG,iDACG,uBAAOK,GAAG,OAAOa,KAAK,OAAOmB,SAAW,SAAAC,GAAC,OAAIP,EAAkBK,EAAG,OAAQE,IAAInB,MAAOhB,EAAOiC,GAAGhC,YAN5FgC,SCT9B,SAASG,EAAeC,EAAKC,GAC5B,IAAIL,EAAGM,EAAGC,EAAOC,EAAMC,EACvB,GAAIJ,EAAID,EAAI1B,QAAU2B,GAAK,EAC1B,MAAO,GAER,GAAIA,IAAMD,EAAI1B,OACb,MAAO,CAAC0B,GAET,GAAU,IAANC,EAAS,CAEZ,IADAE,EAAQ,GACHP,EAAI,EAAGA,EAAII,EAAI1B,OAAQsB,IAC3BO,EAAM9B,KAAK,CAAC2B,EAAIJ,KAEjB,OAAOO,EAIR,IAFAA,EAAQ,GAEHP,EAAI,EAAGA,EAAII,EAAI1B,OAAS2B,EAAI,EAAGL,IAGnC,IAFAQ,EAAOJ,EAAIxB,MAAMoB,EAAGA,EAAI,GACxBS,EAAYN,EAAeC,EAAIxB,MAAMoB,EAAI,GAAIK,EAAI,GAC5CC,EAAI,EAAGA,EAAIG,EAAU/B,OAAQ4B,IACjCC,EAAM9B,KAAK+B,EAAKE,OAAOD,EAAUH,KAGnC,OAAOC,EAmDR,SAASI,EAAYC,EAAiBC,EAAM3C,GAMxC,IALA,IAAM4C,EAAa,GACbC,EAAe,GACjBC,EAAMJ,EACNK,EAAI,EAJsC,cAO1C,IAAMC,EAnBd,SAAkBN,EAAiBC,EAAM7B,GACrC,IAAIgC,EAAM,GACVJ,EAAgBd,KAAI,SAAA9B,GAChBgD,EAAIvC,KAAKT,EAAKmD,UAGlB,IAAMC,EAAeJ,EAAIK,QAAO,SAACC,EAAMC,GACnC,OAAQC,KAAKC,IAAIF,EAAOV,GAAQW,KAAKC,IAAIH,EAAOT,GAAQU,EAAOD,KAEnE,MAAO,CAACI,MAAOd,EAAgBI,EAAIW,QAAQP,IAAcM,MAAOP,MAAMC,EAAapC,OAUjE4C,CAAQZ,EAAKH,EAAMI,GAE7BY,EAASb,EAAIc,QAAO,SAAA9D,GAAI,OAAIA,EAAKmD,QAAUD,EAAMC,SACrDH,EAAMa,EACNZ,IAOIH,EAAWiB,SAASb,EAAMQ,MAAM,KAAQZ,EAAWiB,SAASb,EAAMQ,MAAM,KAAQZ,EAAWiB,SAASb,EAAMQ,MAAM,MAChHR,EAAMQ,MAAM5B,KAAI,SAAAkC,GAAK,OAAIlB,EAAWrC,KAAKuD,MACzCjB,EAAatC,KAAKyC,GAClBlB,KArBsC,KAMtCA,EAAI,EAAGA,EAAI9B,EAAO8B,EAAG,EAArBA,GAkBR,OAAOe,EAGJ,SAASkB,EAAqBC,EAAUpE,GAG3C,IAAIC,EAAS,GACToE,EAAQ,GAEZD,EAASpC,KAAI,SAAAkC,GACTjE,EAAOU,KAAKuD,EAAM/D,IAClBkE,EAAM1D,KAAKuD,EAAMhE,SAGrB,IAGMoE,EA9EV,SAAyBC,EAAQC,GAC7B,IAAMC,EAAa,GAYnB,OAXAF,EAAOvC,KAAI,SAAA4B,GAEP,IAAIc,EAAa,EAOjB,OANAd,EAAM5B,KAAI,SAAA2C,GAGN,OADAD,GAAcF,EAASG,GAChB,MAEXF,EAAW9D,KAAK,CAACiD,QAAOP,MAAMqB,IACvBA,KAEJD,EAiEcG,CAHAvC,EAAepC,EAAQD,GAtFhD,SAAgBkD,GACZ,IAAIa,EAAS,GAOf,OANEb,EAAIlB,KAAI,SAAA9B,GACJ,IAAM2E,EAAmC,IAA1BC,OAAO5E,EAAKY,MAAM,EAAE,IAC7BiE,EAAmC,IAA1BD,OAAO5E,EAAKY,MAAM,EAAE,IAC7BkE,EAASF,OAAO5E,EAAKY,MAAM,IACjCiD,EAAOpD,KAAKkE,EAASE,EAASC,MAE7BjB,EA+EMkB,CAAMZ,IASjB,OAAOxB,EAAWyB,EArEtB,SAA0BY,GAEtB,IADA,IAAI7B,EAAQ,EACJnB,EAAI,EAAGA,EAAIgD,EAAStE,OAAQsB,IAChCmB,GAAS6B,EAAShD,GAAGmB,MAEzB,OAAOA,EAAQ6B,EAAStE,OA0DCuE,CAAgBb,GAMStE,GAG/C,SAASoF,EAAUlF,GACtB,IAAM2E,EAASnB,KAAK2B,MAAMP,OAAO5E,GAAQ,KACnCoF,EAAiBR,OAAO5E,GAAQ,IAEhC6E,EAASrB,KAAK2B,MAAMC,EAAkB,KACtCC,EAAKD,EAAkB,IAE7B,MAAM,GAAN,OAAUT,EAAV,YAAoBE,EAApB,YAA8BQ,G,KChHnBC,MA5Bf,WACI,IAAMpF,EAAQsB,YAAYH,GACpBtB,EAASyB,YAAYN,GAE3B,OACI,qBAAKW,UAAY,SAAjB,SAEQ3B,EAAM4B,KAAI,SAACyD,EAAMvD,GACb,OACI,sBAAaH,UAAY,QAAzB,UACI,wCAAWG,EAAI,EAAf,gBAA+BkD,EAASK,EAAKpC,UAEzCoC,EAAK7B,MAAM5B,KAAI,SAACkC,EAAO1B,GACnB,OACA,8BACI,+BAAKvC,EAAOiE,GAAOpE,KAAnB,MAA4BG,EAAOiE,GAAOhE,SADpCsC,QALZN,SCoCnBwD,MA1Cf,WACI,IAAM/D,EAAWC,cACX5B,EAAW0B,YAAYJ,GACvBrB,EAASyB,YAAYN,GACrBhB,EAAQsB,YAAYH,GAc1B,OACI,sBAAKQ,UAAY,YAAjB,UACI,sBAAKA,UAAY,SAAjB,UACI,+CAEI,uBAAO5B,GAAG,WAAUgC,SAAW,SAAAC,GAAC,OAAIT,EAASrB,EAAe8B,EAAEN,OAAOb,SAASD,KAAK,SAASC,MAASjB,OAEzG,wBAAQ2F,QAAS,kBAAMhE,EAASjB,MAAhC,uBACA,wBAAQiF,QAAS,kBApB7B,WACI,IAAIvF,EACJ,IACIA,EAAQ+D,EAAoBlE,EAAQD,GACtC,MAAM4F,GAGJ,OAFAC,OAAOC,MAAM,gCACbC,QAAQC,IAAIJ,GAGhBjE,EAASR,EAASf,IAWa6F,IAAvB,0BAGJ,gCACI,0CAAahG,EAAOW,UAChB,cAAC,EAAD,OAGR,gCACI,yCAAYR,EAAMQ,UACd,cAAC,EAAD,WCjCLsF,MARf,WACE,OACE,qBAAKnE,UAAU,MAAf,SACI,cAAC,EAAD,OCJKoE,EAAQC,YAAe,CAClCC,QAAS,CACPhF,UAAWiF,KCOKC,QACW,cAA7BV,OAAOW,SAASC,UAEe,UAA7BZ,OAAOW,SAASC,UAEhBZ,OAAOW,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACL,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUV,MAAOA,EAAjB,SACE,cAAC,EAAD,QAINW,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,iB","file":"static/js/main.b86f08e7.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    teamSize: 3,\n    racers: [\n        {\n        name: '',\n        time: '00:00.00',\n        id: 0}\n    ],\n    teams: []\n}\n\nexport const teamMakerSlice = createSlice ({\n    name: 'teamMaker',\n    initialState,\n    reducers: {\n        teamSizeChange: (state, action) => {\n            state.teamSize = action.payload\n        },\n        addRacer: (state, action) => {\n            state.racers.push({\n                name: \"\",\n                time: '00:00.00',\n                id: state.racers.length\n            })\n        },\n        deleteRacer: (state, action) => {\n            state.teams = []\n            state.racers = [\n                ...state.racers.slice(0, action.payload),\n                ...state.racers.slice(action.payload + 1)]\n        },\n        racerChange: (state, action) => {\n            const type = action.payload.type\n            const value = action.payload.value\n            const num = action.payload.num\n            state.racers[num][type] = value\n        },\n        getTeams: (state, action) => {\n            state.teams = action.payload\n        }\n    }\n})\n\nexport const selectRacers = state => state.teamMaker.racers\nexport const selectTeamSize = state => state.teamMaker.teamSize\nexport const selectTeams = state => state.teamMaker.teams\n\nexport const { addRacer, racerChange, deleteRacer, getTeams, teamSizeChange } = teamMakerSlice.actions\n\nexport default teamMakerSlice.reducer","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { deleteRacer, racerChange, selectRacers } from './teamMakerSlice'\n\nfunction Racer() {\n    const racers = useSelector(selectRacers)\n    const dispatch = useDispatch()\n\n    function handleRacerChange (num, type, value) {\n        const payload = {\n            type,\n            num,\n            value: value.target.value\n        }\n        dispatch(racerChange(payload))\n    }\n\n    return (\n        <div className = \"racers\">\n            {   \n            racers.map( (element, i) => {\n                return(\n                    <div key={i} className=\"racer\">\n                        <p>Name: \n                           <input id=\"name\" type=\"text\" onChange ={e => handleRacerChange(i, 'name', e)} value={racers[i].name}></input>\n                        </p>\n\n                        <p>Time (mm:ss.ms): \n                           <input id=\"time\" type=\"text\" onChange ={e => handleRacerChange(i, 'time', e)} value={racers[i].time}></input>\n                           {/*button onClick = {() => dispatch(deleteRacer(i))}>Delete</button> */}\n                        </p>\n                    </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default Racer","/* eslint-disable array-callback-return */\n/*const times = [\n    {id: 0, time:'15:10.60'},\n    {id: 1, time:'13:50.26'},\n    {id: 2, time:'15:21.63'},\n    {id: 3, time:'15:26.97'},\n    {id: 4, time:'13:18.59'},\n    {id: 5, time:'13:05.25'},\n    {id: 6, time:'13:36.18'},\n    {id: 7, time:'14:25.68'},\n    {id: 8, time:'15:24.15'}\n]*/\n\nfunction k_combinations(set, k) {\n\tvar i, j, combs, head, tailcombs;\n\tif (k > set.length || k <= 0) {\n\t\treturn [];\n\t}\n\tif (k === set.length) {\n\t\treturn [set];\n\t}\n\tif (k === 1) {\n\t\tcombs = [];\n\t\tfor (i = 0; i < set.length; i++) {\n\t\t\tcombs.push([set[i]]);\n\t\t}\n\t\treturn combs;\n\t}\n\tcombs = [];\n\n\tfor (i = 0; i < set.length - k + 1; i++) {\n\t\thead = set.slice(i, i + 1);\n\t\ttailcombs = k_combinations(set.slice(i + 1), k - 1);\n\t\tfor (j = 0; j < tailcombs.length; j++) {\n\t\t\tcombs.push(head.concat(tailcombs[j]));\n\t\t}\n\t}\n\treturn combs;\n}\n\nfunction tooMS (arr){\n    let newArr = []\n    arr.map(time => {\n        const minute = Number(time.slice(0,2)) * 60000\n        const second = Number(time.slice(3,5)) * 1000\n        const milSec = Number(time.slice(6))\n        newArr.push(minute + second + milSec)\n    })\n  return newArr  \n}\n\nfunction totalRaceTimes (combos, timesObj) {\n    const totaledArr = []\n    combos.map(combo => {\n        \n        let comboTotal = 0\n        combo.map(r => {\n\n            comboTotal += timesObj[r]\n            return ''\n        })\n        totaledArr.push({combo, total:comboTotal})\n        return comboTotal\n    })\n    return totaledArr\n}\n\nfunction averageRaceTime (timesArr) {\n    var total = 0\n    for(let i = 0; i < timesArr.length; i++){\n        total += timesArr[i].total\n    }\n    return total / timesArr.length\n}\n  \n\nfunction closest (raceTimesObjArr, goal, num){\n    let arr = []\n    raceTimesObjArr.map(time => {\n        arr.push(time.total)\n    })\n    \n    const closestTime =  arr.reduce((prev, curr) => {\n        return (Math.abs(curr - goal) < Math.abs(prev - goal) ? curr : prev)\n    })\n    return {combo: raceTimesObjArr[arr.indexOf(closestTime)].combo ,total:closestTime, num}\n}\n\nfunction nthClosest (raceTimesObjArr, goal, teams){\n    const usedRacers = []\n    const closestTimes = []\n    let arr = raceTimesObjArr\n    let b = 0\n\n    for(let i = 0; i < teams; i){\n        const close = closest(arr, goal, b)\n\n        let newArr = arr.filter(time => time.total !== close.total)\n        arr = newArr\n        b++\n\n        //console.log(i + \" \" + teams)\n        //console.log(close)\n        //console.log(usedRacers)\n        //console.log(arr)\n\n        if(!usedRacers.includes(close.combo[0]) && !usedRacers.includes(close.combo[1]) && !usedRacers.includes(close.combo[2])) {\n            close.combo.map(racer => usedRacers.push(racer))\n            closestTimes.push(close)\n            i++\n        }\n    }\n    return closestTimes\n}\n\nexport function findClosestNthTimes (racerObj, teamSize) {\n\n\n    let racers = []\n    let times = []\n\n    racerObj.map(racer => {\n        racers.push(racer.id)\n        times.push(racer.time)\n    })\n\n    const combinations = k_combinations(racers, teamSize)\n    const ms = tooMS(times)\n\n    const raceTimesObj = totalRaceTimes(combinations ,ms)\n    const raceTimesAverage = averageRaceTime(raceTimesObj)\n\n    //console.log(raceTimesObj)\n    //console.log(raceTimesAverage)\n\n    //console.log(nthClosest(raceTimesObj, raceTimesAverage, teamSize))\n    return nthClosest(raceTimesObj, raceTimesAverage, teamSize)\n}\n\nexport function msToTime (time) {\n    const minute = Math.floor(Number(time) / 60000)\n    const minuteRemainder =Number(time) % 60000\n\n    const second = Math.floor(minuteRemainder / 1000)\n    const ms = minuteRemainder % 1000\n\n    return `${minute}:${second}.${ms}`\n}","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { selectRacers, selectTeams } from './teamMakerSlice'\nimport { msToTime } from './teamMakerlogic'\nimport './teamMaker.css'\n\nfunction Teams() {\n    const teams = useSelector(selectTeams)\n    const racers = useSelector(selectRacers)\n\n    return(\n        <div className = 'racers'>\n            {\n                teams.map((team, i) => {\n                    return(\n                        <div key={i} className = 'racer'>\n                            <h3>Team: {i + 1} Total Time: {msToTime(team.total)}</h3>\n                            {\n                                team.combo.map((racer, j) => {\n                                    return (\n                                    <div key={j}>\n                                        <h4>{racers[racer].name} - {racers[racer].time}</h4>\n                                    </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default Teams","import React from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\nimport Racer from './racer'\nimport Teams from './raceTeams'\nimport { findClosestNthTimes } from './teamMakerlogic'\nimport { addRacer, getTeams, selectRacers, selectTeams, selectTeamSize, teamSizeChange } from './teamMakerSlice'\nimport './teamMaker.css'\n\n\nfunction TeamMaker() {\n    const dispatch = useDispatch()\n    const teamSize = useSelector(selectTeamSize)\n    const racers = useSelector(selectRacers)\n    const teams = useSelector(selectTeams)\n\n    function handleGetTeams () {\n        let teams\n        try { \n            teams = findClosestNthTimes(racers, teamSize)\n        } catch(err) {\n            window.alert('Error in Creating Teams')\n            console.log(err)\n            return\n        }\n        dispatch(getTeams(teams))\n    }\n    \n    return (\n        <div className = 'teamMaker'>\n            <div className = 'header'>\n                <label>\n                    Team Size:\n                    <input id=\"teamSize\"onChange ={e => dispatch(teamSizeChange(e.target.value))} type='number' value = {teamSize}></input>\n                </label>\n                <button onClick={() => dispatch(addRacer())}>Add Racer</button>\n                <button onClick={() => handleGetTeams()}>Get Teams</button>\n            </div>\n\n            <div>\n                <h2>Racers: {racers.length}</h2>\n                    <Racer />\n            </div>\n\n            <div>\n                <h2>Teams: {teams.length}</h2>\n                    <Teams />\n            </div>\n        </div>\n    )\n}\n\nexport default TeamMaker","import React from 'react';\n\nimport TeamMaker from './features/teamMaker/teamMaker';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <TeamMaker />\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport teamMakerReducer from '../features/teamMaker/teamMakerSlice'\n\nexport const store = configureStore({\n  reducer: {\n    teamMaker: teamMakerReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}